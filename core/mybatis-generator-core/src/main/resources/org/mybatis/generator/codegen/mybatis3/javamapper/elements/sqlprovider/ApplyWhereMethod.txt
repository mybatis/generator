====
       Copyright 2006-2023 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
====

This file holds method lines that are added to the "applyWhere" method in a
generated SQLProvider. All lines after the delimiter "--- method lines below ---"
will be added to the method.

--- method lines below ---
if (example == null) {
    return;
}

String parmPhrase1;
String parmPhrase1_th;
String parmPhrase2;
String parmPhrase2_th;
String parmPhrase3;
String parmPhrase3_th;
if (includeExamplePhrase) {
    parmPhrase1 = "%s #{example.orderCriteria[%d].allCriteria[%d].value}";
    parmPhrase1_th = "%s #{example.orderCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
    parmPhrase2 = "%s #{example.orderCriteria[%d].allCriteria[%d].value} and #{example.orderCriteria[%d].criteria[%d].secondValue}";
    parmPhrase2_th = "%s #{example.orderCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.orderCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
    parmPhrase3 = "#{example.orderCriteria[%d].allCriteria[%d].value[%d]}";
    parmPhrase3_th = "#{example.orderCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
} else {
    parmPhrase1 = "%s #{orderCriteria[%d].allCriteria[%d].value}";
    parmPhrase1_th = "%s #{orderCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
    parmPhrase2 = "%s #{orderCriteria[%d].allCriteria[%d].value} and #{orderCriteria[%d].criteria[%d].secondValue}";
    parmPhrase2_th = "%s #{orderCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{orderCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
    parmPhrase3 = "#{orderCriteria[%d].allCriteria[%d].value[%d]}";
    parmPhrase3_th = "#{orderCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
}

StringBuilder sb = new StringBuilder();
List<Criteria> orderCriteria = example.getorderCriteria();
boolean firstCriteria = true;
for (int i = 0; i < orderCriteria.size(); i++) {
    Criteria criteria = orderCriteria.get(i);
    if (criteria.isValid()) {
        if (firstCriteria) {
            firstCriteria = false;
        } else {
            sb.append(" or ");
        }

        sb.append('(');
        List<Criterion> criterions = criteria.getAllCriteria();
        boolean firstCriterion = true;
        for (int j = 0; j < criterions.size(); j++) {
            Criterion criterion = criterions.get(j);
            if (firstCriterion) {
                firstCriterion = false;
            } else {
                sb.append(" and ");
            }

            if (criterion.isNoValue()) {
                sb.append(criterion.getCondition());
            } else if (criterion.isSingleValue()) {
                if (criterion.getTypeHandler() == null) {
                    sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                } else {
                    sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                }
            } else if (criterion.isBetweenValue()) {
                if (criterion.getTypeHandler() == null) {
                    sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                } else {
                    sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                }
            } else if (criterion.isListValue()) {
                sb.append(criterion.getCondition());
                sb.append(" (");
                List<?> listItems = (List<?>) criterion.getValue();
                boolean comma = false;
                for (int k = 0; k < listItems.size(); k++) {
                    if (comma) {
                        sb.append(", ");
                    } else {
                        comma = true;
                    }
                    if (criterion.getTypeHandler() == null) {
                        sb.append(String.format(parmPhrase3, i, j, k));
                    } else {
                        sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                    }
                }
                sb.append(')');
            }
        }
        sb.append(')');
    }
}

if (sb.length() > 0) {
    sql.WHERE(sb.toString());
}
